(ns uawa.core)(defmacro стала "defonce" [назва значення] `(let [v# (def ~назва)](when-not (.hasRoot v#) (def ~назва ~значення))))(defmacro вираз "same as defn" [назви & описи] (list* `defn (with-meta назви (assoc (meta назви) :private false)) описи))(defmacro якщо ([умова то] `(if ~умова ~то nil)) ([умова то інакше] `(if ~умова ~то ~інакше)))(стала істина true)(стала фальш false)(вираз ні? "not" [x] (not x))(вираз кожен? "and" ([x y] (and x y)) ([x y & more] (reduce кожен? (кожен? x y) more)))(вираз якийсь? "or" ([x y] (or x y)) ([x y & more] (reduce якийсь? (якийсь? x y) more)))(вираз дай-випадкове "rand-int" [n] (rand-int n))(вираз друкуй "println" [& більше]  (binding [*print-readably* nil] (apply prn більше)))(вираз менше?  ([x] true) ([x y] (. clojure.lang.Numbers (lt x y))) ([x y & more]   (if (< x y)     (if (next more)       (recur y (first more) (next more))       (< y (first more))) false)));; (якщо (менше? (дай-випадкове 3) 4) (друкуй "українська") (друкуй "ураиский русский))